buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath("org.flywaydb:flyway-gradle-plugin:3.2.1")
        classpath 'gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.7'
        classpath 'com.netflix.nebula:gradle-contacts-plugin:3.0.1'
        classpath 'com.netflix.nebula:gradle-dependency-lock-plugin:4.2.0'
        classpath 'com.netflix.nebula:gradle-git-scm-plugin:3.0.1'
        classpath 'com.netflix.nebula:gradle-info-plugin:3.0.3' 
    }
}

plugins {
    id "org.flywaydb.flyway" version "3.2"
}

flyway {
    url = 'jdbc:mysql://127.0.0.1/test'
    user = 'myuser'
    password = 'mypass'
}

group = "${System.env.USER}"

apply plugin: 'java'
apply plugin: "com.gorylenko.gradle-git-properties" // Must be after java plugin due to 'classes' task dependency
apply plugin: 'docker'
apply plugin: 'eclipse'
apply plugin: 'org.flywaydb.flyway'
apply plugin: 'nebula.contacts-base'
apply plugin: 'nebula.info'
apply plugin: 'nebula.dependency-lock'
apply plugin: 'nebula.gradle-git-scm'
apply plugin: 'spring-boot'

apply from:   "$rootDir/code-quality.gradle"

repositories {
    mavenCentral()
}

processResources {
    expand(project.properties)
}

sourceCompatibility = jdkVersion
targetCompatibility = jdkVersion

dependencies {
    compile("org.apache.commons:commons-lang3:3.0")
    compile("org.flywaydb:flyway-core:3.1")
    compile("org.springframework.boot:spring-boot-devtools")
    compile("org.springframework.data:spring-data-rest-hal-browser")
    compile('org.springframework.data:spring-data-rest-webmvc:2.4.1.RELEASE')
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-remote-shell")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("com.timgroup:java-statsd-client")

    runtime("mysql:mysql-connector-java:5.1.6")
    
    testCompile('org.flywaydb.flyway-test-extensions:flyway-spring-test:3.2.1') {
        exclude group: 'org.slf4j' //introducing multiple slf4j impl
    }
    testCompile("org.springframework.boot:spring-boot-starter-test",
                "com.jayway.restassured:json-path:2.8.0",
                "com.jayway.restassured:rest-assured:2.8.0",
                'com.jayway.restassured:spring-mock-mvc:2.8.0',
                "com.jayway.restassured:xml-path:2.8.0",
                "junit:junit")
}

contacts {
    'stuart@company.com' {
        name 'Stuart'
        github 'singram'
        role 'owner'
    }
    'help@company.com' {
        name 'Support'
        role 'notify'
    }
}

test {
    afterTest { desc, result -> 
        println "Executing test [${desc.className}].${desc.name} with result: ${result.resultType}"
    }
//    testLogging {
//       events "passed", "skipped", "failed", "standardOut", "standardError"
//  }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}

task buildDocker(type: Docker, dependsOn: build) {
//  push = true
  applicationName = jar.baseName
  dockerfile = file('src/main/docker/Dockerfile')
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}
